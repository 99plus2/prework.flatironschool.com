{"google":"UA-33578770-7","name":"Prework","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### The Flatiron School's Prework\r\n\r\nIn this document you’re going to find a ton of reading, videos, and quizzes that Flatiron students complete before their semester even begins. We thought we'd open source this material. We suggest going through this material linearly because it really represents a progressive journey through fundementals and abstractions. Enjoy.\r\n\r\nThe main topics we want you to know about before the semester starts are: Internet Basics, Command-Line Interface, Git Version Control, SQL and Databases, HTML, CSS, Javascript and jQuery, Ruby, and Ruby on Rails.\r\n\r\nEach resource has an estimated amount of time it should take you if you have 0 prior knowledge on the topic. In total, if you are coming to this with absolutely no experience, as in, you’d have trouble articulating what\r\nis, then I estimate this work will take you between 80 - 100 hours to complete. If you are a rockstar, this shouldn’t take more than a 6-10 hours. Most of you are somewhere in between.\r\n\r\nIf you are familiar with the topic, I highly suggest trying to take the quiz or challenge first. If you pass easily and collect the badge, great, move on. That being said, even I found myself learning new things during this assessment, so maybe try to watch the videos on the topics with which you are most unfamiliar.\r\n\r\nI’ve also added some optional resources. If you are familiar with the required material, take a stab at the optional and advanced topics. The goal in the next 4 months is to immerse yourself in as much technology as possible.\r\n\r\nIn terms of reading and watching videos, feel free to skip through - go for overall coverage as opposed to depth - try to read and watch as much as possible and then try to take the quiz. Be quick, and then do a 2nd round of reading and watching\r\n\r\nAlso, if you find yourself stuck, or stuff doesn’t make sense, or things are taking way longer than I thought they would, please email me! I’d love to keep track of your progress and what you’re working on, the purpose of this assessment is simply to see where we all stand and give you all a chance to get caught up on some basic skills.\r\n\r\nThe goal in the end is for you to submit your Code School and Treehouse profiles and for me to see that you’ve completed all the required badges and assessments that are listed below.\r\n\r\n\r\n\r\nINTERNET BASICS\r\n\r\nThe goal of this section is for you to understanding the basics of the web. What web servers are, how code is interpreted, basic things like that.\r\n\r\nWebsite Basics: 1.5 Hours\r\nhttp://teamtreehouse.com/library/websites/website-basics\r\n\r\nTechnology Foundations: 1 Hour \r\nhttp://teamtreehouse.com/library/websites/technology-foundations\r\n\r\nAesthetic Foundations: 2.5 Hours\r\nhttp://teamtreehouse.com/library/websites/aesthetic-foundations\r\n\r\nReading: Term Definitions: 2 Hours\r\nhttp://www.skillcrush.com/terms/domain.html\r\nhttp://www.skillcrush.com/terms/pop-imap.html\r\nhttp://www.skillcrush.com/terms/wysiwyg.html\r\nhttp://www.skillcrush.com/terms/api.html\r\nhttp://www.skillcrush.com/terms/ipaddress.html\r\nhttp://www.skillcrush.com/terms/web-server.html\r\nhttp://www.skillcrush.com/terms/bugs.html\r\nhttp://www.skillcrush.com/terms/dns.html\r\nhttp://www.skillcrush.com/terms/cloud.html\r\nhttp://www.skillcrush.com/terms/domain.html \r\nhttp://www.skillcrush.com/terms/command-line.html\r\nhttp://www.skillcrush.com/terms/version-control.html\r\nhttp://www.skillcrush.com/terms/grid-systems.html\r\nhttp://www.skillcrush.com/terms/c-languages.htmll\r\nhttp://www.skillcrush.com/terms/rails.html\r\nhttp://www.skillcrush.com/terms/version-control.html\r\nhttp://www.skillcrush.com/terms/cookies.html\r\nhttp://www.skillcrush.com/terms/404-error.html\r\nhttp://www.skillcrush.com/terms/responsive-design.html\r\nhttp://www.skillcrush.com/terms/seo.html\r\nhttp://www.skillcrush.com/terms/hexidecimal.html\r\nhttp://www.skillcrush.com/terms/ruby.html\r\nhttp://www.skillcrush.com/terms/cms.html\r\nhttp://www.skillcrush.com/terms/pseudocode.html\r\nhttp://www.skillcrush.com/terms/https.html\r\nhttp://www.skillcrush.com/terms/open-source.html\r\nhttp://www.skillcrush.com/terms/ajax.html\r\nhttp://www.skillcrush.com/terms/frontendbackend.html\r\nhttp://www.skillcrush.com/terms/javascript.html\r\nhttp://www.skillcrush.com/terms/programming-languages.html\r\nhttp://www.skillcrush.com/terms/database.html\r\nhttp://www.skillcrush.com/terms/css.html\r\nhttp://www.skillcrush.com/terms/html.html\r\n\r\n\r\n\r\nCOMMAND-LINE INTERFACE\r\n\r\nFamiliarity with a shell environment is crucial to being a functional developer. There are no good interactive tutorials for command lines, so you will have to complete the following reading:\r\n\r\nLearn the Command Line the Hard Way: 3 Hours\r\nhttp://cli.learncodethehardway.org/book/\r\n\r\nCommand Line Basics: .5 Hours\r\nhttp://blog.teamtreehouse.com/command-line-basics\r\n\r\nBash Basics: .5 Hours\r\nhttps://gist.github.com/a8a7ca963e37e0b108b9\r\n\r\n\r\nSQL & DATABASES\r\n\r\nThis section is all about understanding what databases are and how to query them for data.\r\n\r\nLearn SQL the Hardway: 4 Hours\r\nhttp://sql.learncodethehardway.org/book/ \r\n\r\nGoogle’s MySQL Tutorial: 2 Hours\r\nhttp://code.google.com/edu/tools101/mysql.html \r\n\r\n\r\nHTML\r\n\r\nThe source of all content on the web, HTML is a crucial markup syntax to understand. We will be covering very little HTML through the course and I seriously expect you to know what the basic tags are and when to use them.\r\n\r\nHTML & CSS Tutorial: 3 Hours \r\nThis is a beautiful guide that I recommend everyone read through as quickly as possible. Don’t worry if you don’t fully grok this, the Treehouse unit below covers all this through videos and tests.\r\nhttp://learn.shayhowe.com/html-css/\r\n\r\nTreehouse HTML Basics: 6 Hours\r\nhttp://teamtreehouse.com/library/websites/html\r\n\r\nAdvanced HTML5 & CSS3: 6 Hours (optional)\r\nIf you are familiar with HTML & CSS already and were able to complete the Treehouse unit pretty easily, I recommend you try this unit. Especially if you are into aesthetics and advanced behaviors as it covers some amazing features of HTML & CSS.\r\nhttp://www.codeschool.com/courses/functional-html5-css3\r\n\r\n\r\nCSS\r\n\r\nWhile HTML tells the browser what different parts of the page are, CSS says what those pieces should look like.\r\n\r\nCSS Foundations: 6 Hours\r\nhttp://teamtreehouse.com/library/websites/css-foundations\r\n\r\nCSS Cross Country: 4 Hours\r\nhttp://www.codeschool.com/courses/css-cross-country\r\n\r\nCSS3 on Treehouse: 4 Hours (optional)\r\nhttp://teamtreehouse.com/library/websites/css3\r\n\r\nResponsive Websites: 4 Hours (very optional)\r\nhttp://teamtreehouse.com/library/websites/build-a-responsive-website/\r\n\r\n\r\nGIT: VERSION CONTROL\r\n\r\nTry Git: 1 Hour\r\nhttp://www.codeschool.com/courses/try-git\r\n\r\nGit Real: 4 Hours\r\nhttp://www.codeschool.com/courses/git-real\r\n\r\nExtra Reading Material\r\nhttp://git-scm.com/book\r\nhttp://git-scm.com/video/what-is-version-control\r\n\r\n\r\nPROGRAMMING BASICS\r\n\r\nCertain aspects of coding are fundamental, learn them through javascript and ruby.\r\n\r\nTry Ruby: 1 Hour\r\nhttp://www.codeschool.com/courses/try-ruby\r\n\r\nIntroduction to Programming: 4 Hours\r\nhttp://teamtreehouse.com/library/programming-2/introduction-to-programming\r\n\r\n\r\nJAVASCRIPT\r\n\r\nJavascript Foundations: 6 Hours\r\nhttp://teamtreehouse.com/library/websites/javascript-foundations\r\n\r\njQuery Air First Flight: 6 Hours\r\nhttp://www.codeschool.com/courses/jquery-air-first-flight\r\n\r\njQuery Air Captain’s Log: 6 Hours (optional)\r\nhttp://www.codeschool.com/courses/jquery-air-captains-log\r\n\r\n\r\nRUBY\r\n\r\nThe best language ever created, trust me.\r\n\r\nRuby Foundations: 10 Hours\r\nhttp://teamtreehouse.com/library/programming-2/ruby-foundations\r\n\r\nRuby Bits: 4 Hours\r\nhttp://www.codeschool.com/courses/ruby-bits\r\n\r\n\r\nRAILS\r\n\r\nOur web framework of choice.\r\n\r\nRails for Zombies: 4 Hours\r\nhttp://www.codeschool.com/courses/rails-for-zombies-redux\r\n\r\nRails for Zombies 2: 4 Hours\r\nhttp://www.codeschool.com/courses/rails-for-zombies-2\r\n\r\n\r\nSAMPLE APPLICATION\r\n\r\nBuilding Facebook: 12 Hours\r\nhttp://teamtreehouse.com/library/programming-2/build-a-simple-version-of-facebook\r\n\r\n\r\nADVANCED\r\n\r\nAll this unit is optional\r\n\r\nTesting with RSpec\r\nhttp://www.codeschool.com/courses/testing-with-rspec\r\n\r\nRails Testing for Zombies\r\nhttp://www.codeschool.com/courses/rails-testing-for-zombies\r\n\r\nRails Best Practices\r\nhttp://www.codeschool.com/courses/rails-best-practices","tagline":""}